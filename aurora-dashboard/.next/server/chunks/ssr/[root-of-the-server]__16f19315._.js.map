{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Patron/Contacts/Desktop/Ghost%20in%20the%20Shell/aurora-dashboard/src/components/AvatarWithMessageHandler.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { Brain, Zap, Heart, Database } from 'lucide-react';\r\nimport { useEffect, useRef } from 'react';\r\n\r\ninterface AvatarWithMessageHandlerProps {\r\n  metrics: {\r\n    relationship_level: number;\r\n    trust_level: number;\r\n    emotional_sync: number;\r\n    memory_depth: number;\r\n    current_emotion: string;\r\n    current_topic: string;\r\n    conversation_active: boolean;\r\n  };\r\n  connected: boolean;\r\n  userId?: string;\r\n  onSpeechProcessed?: (result: any) => void;\r\n}\r\n\r\n// Provide a global singleton for DailyIframe across HMR/StrictMode\r\ndeclare global {\r\n  interface Window { __dailySingleton?: any }\r\n}\r\nasync function getDailySingleton() {\r\n  if (typeof window === 'undefined') return null;\r\n  if (window.__dailySingleton) return window.__dailySingleton;\r\n  const DailyIframe = (await import('@daily-co/daily-js')).default;\r\n  window.__dailySingleton = DailyIframe;\r\n  return DailyIframe;\r\n}\r\n\r\nexport function AvatarWithMessageHandler({ metrics, connected, userId = 'default_user', onSpeechProcessed }: AvatarWithMessageHandlerProps) {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const callFrameRef = useRef<any>(null);\r\n\r\n  // Initialize Daily.js frame and event listeners\r\n  useEffect(() => {\r\n    let destroyed = false;\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n\r\n    (async () => {\r\n      try {\r\n        const DailyIframe = await getDailySingleton();\r\n        if (!DailyIframe) return;\r\n\r\n        // Prevent duplicate DailyIframe instances during re-renders/HMR\r\n        if (callFrameRef.current) {\r\n          console.log('♻️ Reusing existing Daily call frame');\r\n          return;\r\n        }\r\n\r\n        // If the container already has an iframe, adopt its instance\r\n        const existingIframe = container.querySelector('iframe');\r\n        if (existingIframe) {\r\n          const adopted = DailyIframe.getCallInstance?.();\r\n          if (adopted) {\r\n            console.log('🫶 Adopting existing Daily iframe instance');\r\n            callFrameRef.current = adopted;\r\n            return;\r\n          }\r\n        }\r\n\r\n        const existing = DailyIframe.getCallInstance?.();\r\n        if (existing) {\r\n          console.log('🧲 Found global Daily instance; adopting instead of creating');\r\n          callFrameRef.current = existing;\r\n          return;\r\n        }\r\n\r\n        // Create Daily frame (first and only one)\r\n        let callFrame;\r\n        try {\r\n          callFrame = DailyIframe.createFrame(container, {\r\n            url: 'https://tavus.daily.co/cb6fc8ca9470c45a',\r\n            showLeaveButton: false,\r\n            showFullscreenButton: false,\r\n            showLocalVideo: false,\r\n            showParticipantsBar: false,\r\n          });\r\n        } catch (err: any) {\r\n          if (String(err?.message || err).includes('Duplicate DailyIframe')) {\r\n            const fallback = DailyIframe.getCallInstance?.();\r\n            if (fallback) {\r\n              console.warn('⚠️ Duplicate create detected; adopting existing Daily instance');\r\n              callFrameRef.current = fallback;\r\n              return;\r\n            }\r\n            throw err;\r\n          }\r\n          throw err;\r\n        }\r\n\r\n        if (destroyed) {\r\n          try { callFrame.destroy(); } catch {}\r\n          return;\r\n        }\r\n\r\n        callFrameRef.current = callFrame;\r\n\r\n        // Listen for app messages (this is how Tavus sends conversation events)\r\n        callFrame.on('app-message', async (event: any) => {\r\n          const data = event.data;\r\n          console.log('✅ App message from Tavus:', data);\r\n\r\n          if (data.event_type === 'conversation.utterance') {\r\n            const speech = data.properties?.speech;\r\n            const role = data.properties?.role;\r\n\r\n            if (role === 'user' && speech) {\r\n              console.log('🎤 User said:', speech);\r\n\r\n              try {\r\n                // Send to Aurora backend for processing\r\n                const response = await fetch('http://localhost:8000/api/process-speech', {\r\n                  method: 'POST',\r\n                  headers: {'Content-Type': 'application/json'},\r\n                  body: JSON.stringify({text: speech, user_id: userId})\r\n                });\r\n\r\n                if (response.ok) {\r\n                  const result = await response.json();\r\n                  console.log('🧠 Speech processed:', result);\r\n                  onSpeechProcessed?.(result);\r\n                } else {\r\n                  console.error('❌ Backend response error:', response.status, response.statusText);\r\n                }\r\n              } catch (error) {\r\n                console.error('❌ Error processing speech:', error);\r\n              }\r\n            } else if (role === 'replica' && speech) {\r\n              console.log('🤖 Aurora said:', speech);\r\n            }\r\n          } else if (data.event_type === 'conversation.user.started_speaking') {\r\n            console.log('🎤 User started speaking...');\r\n          } else if (data.event_type === 'conversation.user.stopped_speaking') {\r\n            console.log('🤐 User stopped speaking.');\r\n          }\r\n        });\r\n\r\n        // Join the call once\r\n        callFrame.join().then(() => {\r\n          console.log('✅ Joined Tavus conversation successfully!');\r\n        }).catch((error: any) => {\r\n          console.error('❌ Failed to join conversation:', error);\r\n        });\r\n      } catch (error) {\r\n        console.error('❌ Failed to initialize Daily frame:', error);\r\n      }\r\n    })();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      destroyed = true;\r\n      if (callFrameRef.current) {\r\n        console.log('🧹 Cleaning up Daily frame...');\r\n        try { callFrameRef.current.destroy(); } catch {}\r\n        callFrameRef.current = null;\r\n      }\r\n    };\r\n  // Only run once on mount; userId/onSpeechProcessed are handled inside without re-creating the frame\r\n  }, []);\r\n\r\n  const getEmotionColor = (emotion: string) => {\r\n    const colors = {\r\n      excited: 'from-yellow-400 via-orange-400 to-red-400',\r\n      happy: 'from-green-400 via-emerald-400 to-cyan-400',\r\n      anxious: 'from-red-400 via-orange-400 to-yellow-400',\r\n      sad: 'from-blue-400 via-indigo-400 to-purple-400',\r\n      curious: 'from-purple-400 via-pink-400 to-cyan-400',\r\n      neutral: 'from-gray-400 via-gray-500 to-gray-600',\r\n    };\r\n    return colors[emotion as keyof typeof colors] || colors.neutral;\r\n  };\r\n\r\n  const getAvatarSize = () => {\r\n    const baseSize = 320;\r\n    const activityBonus = metrics.conversation_active ? 40 : 0;\r\n    const emotionBonus = metrics.current_emotion !== 'neutral' ? 20 : 0;\r\n    return baseSize + activityBonus + emotionBonus;\r\n  };\r\n\r\n  const getOrbitingMetrics = () => [\r\n    {\r\n      label: 'REL',\r\n      value: metrics.relationship_level,\r\n      icon: Heart,\r\n      color: 'text-pink-400',\r\n      position: { angle: 0, radius: 200 }\r\n    },\r\n    {\r\n      label: 'TRS',\r\n      value: metrics.trust_level,\r\n      icon: Database,\r\n      color: 'text-blue-400',\r\n      position: { angle: 90, radius: 200 }\r\n    },\r\n    {\r\n      label: 'EMO',\r\n      value: metrics.emotional_sync,\r\n      icon: Zap,\r\n      color: 'text-yellow-400',\r\n      position: { angle: 180, radius: 200 }\r\n    },\r\n    {\r\n      label: 'MEM',\r\n      value: metrics.memory_depth,\r\n      icon: Brain,\r\n      color: 'text-purple-400',\r\n      position: { angle: 270, radius: 200 }\r\n    }\r\n  ];\r\n\r\n  const avatarSize = getAvatarSize();\r\n  const orbitingMetrics = getOrbitingMetrics();\r\n\r\n  return (\r\n    <div className=\"relative flex items-center justify-center\">\r\n      {/* Orbiting metric indicators */}\r\n      {orbitingMetrics.map((metric, index) => {\r\n        const x = Math.cos((metric.position.angle * Math.PI) / 180) * metric.position.radius;\r\n        const y = Math.sin((metric.position.angle * Math.PI) / 180) * metric.position.radius;\r\n\r\n        return (\r\n          <motion.div\r\n            key={metric.label}\r\n            className=\"absolute\"\r\n            style={{\r\n              left: `calc(50% + ${x}px)`,\r\n              top: `calc(50% + ${y}px)`,\r\n              transform: 'translate(-50%, -50%)'\r\n            }}\r\n            initial={{ opacity: 0, scale: 0 }}\r\n            animate={{\r\n              opacity: connected ? 1 : 0.3,\r\n              scale: 1,\r\n              rotate: metrics.conversation_active ? 360 : 0\r\n            }}\r\n            transition={{\r\n              delay: index * 0.2,\r\n              rotate: { duration: 8, repeat: Infinity, ease: \"linear\" }\r\n            }}\r\n          >\r\n            <div className=\"bg-black/60 backdrop-blur-md border border-gray-700/50 rounded-lg p-3 min-w-[80px]\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <metric.icon className={`w-4 h-4 ${metric.color}`} />\r\n                <div>\r\n                  <div className=\"text-xs text-gray-400\">{metric.label}</div>\r\n                  <div className={`text-sm font-mono ${metric.color}`}>\r\n                    {metric.value.toFixed(0)}%\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        );\r\n      })}\r\n\r\n      {/* Central Avatar Orb */}\r\n      <motion.div\r\n        className=\"relative\"\r\n        animate={{\r\n          scale: connected ? 1 : 0.8,\r\n          opacity: connected ? 1 : 0.6\r\n        }}\r\n        transition={{ duration: 1 }}\r\n      >\r\n        {/* Outer pulsing ring */}\r\n        <motion.div\r\n          className={`absolute inset-0 rounded-full bg-gradient-to-r ${getEmotionColor(metrics.current_emotion)} opacity-20`}\r\n          animate={{\r\n            scale: [1, 1.2, 1],\r\n            opacity: [0.2, 0.4, 0.2]\r\n          }}\r\n          transition={{\r\n            duration: 2,\r\n            repeat: Infinity,\r\n            ease: \"easeInOut\"\r\n          }}\r\n          style={{\r\n            width: avatarSize + 40,\r\n            height: avatarSize + 40,\r\n            left: -20,\r\n            top: -20\r\n          }}\r\n        />\r\n\r\n        {/* Middle ring */}\r\n        <motion.div\r\n          className={`absolute inset-0 rounded-full bg-gradient-to-r ${getEmotionColor(metrics.current_emotion)} opacity-30 border-2 border-white/10`}\r\n          animate={{\r\n            rotate: 360\r\n          }}\r\n          transition={{\r\n            duration: 10,\r\n            repeat: Infinity,\r\n            ease: \"linear\"\r\n          }}\r\n          style={{\r\n            width: avatarSize + 20,\r\n            height: avatarSize + 20,\r\n            left: -10,\r\n            top: -10\r\n          }}\r\n        />\r\n\r\n        {/* Main avatar bubble with iframe container */}\r\n        <motion.div\r\n          className={`rounded-full bg-gradient-to-br ${getEmotionColor(metrics.current_emotion)} p-2 backdrop-blur-xl border border-white/20 shadow-2xl overflow-hidden`}\r\n          style={{\r\n            width: avatarSize,\r\n            height: avatarSize\r\n          }}\r\n          animate={{\r\n            boxShadow: connected\r\n              ? [\r\n                  \"0 0 40px rgba(59, 130, 246, 0.3)\",\r\n                  \"0 0 80px rgba(59, 130, 246, 0.5)\",\r\n                  \"0 0 40px rgba(59, 130, 246, 0.3)\"\r\n                ]\r\n              : \"0 0 20px rgba(75, 85, 99, 0.3)\"\r\n          }}\r\n          transition={{\r\n            boxShadow: { duration: 2, repeat: Infinity }\r\n          }}\r\n        >\r\n          <div className=\"w-full h-full rounded-full bg-black/80 backdrop-blur-md relative overflow-hidden\">\r\n            {/* Daily.js container for Tavus */}\r\n            <div\r\n              ref={containerRef}\r\n              className=\"absolute inset-0 w-full h-full rounded-full\"\r\n              style={{\r\n                transform: 'scale(1.1)',\r\n                transformOrigin: 'center center',\r\n              }}\r\n            />\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Patron/Contacts/Desktop/Ghost%20in%20the%20Shell/aurora-dashboard/src/components/MetricCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { TrendingUp, TrendingDown, Minus } from 'lucide-react';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface MetricCardProps {\r\n  title: string;\r\n  value: number;\r\n  max: number;\r\n  icon: ReactNode;\r\n  color: string;\r\n  trend: 'up' | 'down' | 'stable';\r\n}\r\n\r\nexport function MetricCard({ title, value, max, icon, color, trend }: MetricCardProps) {\r\n  const percentage = (value / max) * 100;\r\n\r\n  const getTrendIcon = () => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return <TrendingUp className=\"w-3 h-3 text-green-400\" />;\r\n      case 'down':\r\n        return <TrendingDown className=\"w-3 h-3 text-red-400\" />;\r\n      default:\r\n        return <Minus className=\"w-3 h-3 text-gray-400\" />;\r\n    }\r\n  };\r\n\r\n  const getTrendColor = () => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return 'text-green-400';\r\n      case 'down':\r\n        return 'text-red-400';\r\n      default:\r\n        return 'text-gray-400';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      whileHover={{ scale: 1.02, y: -2 }}\r\n      className=\"bg-black/40 backdrop-blur-md border border-gray-700/50 rounded-xl p-6 relative overflow-hidden group\"\r\n    >\r\n      {/* Background gradient */}\r\n      <div className={`absolute inset-0 bg-gradient-to-br ${color} opacity-5 group-hover:opacity-10 transition-opacity duration-300`} />\r\n\r\n      {/* Content */}\r\n      <div className=\"relative z-10\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className={`p-2 rounded-lg bg-gradient-to-r ${color} bg-opacity-20`}>\r\n              {icon}\r\n            </div>\r\n            <span className=\"text-gray-300 text-sm font-medium\">{title}</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-1\">\r\n            {getTrendIcon()}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Value */}\r\n        <div className=\"mb-4\">\r\n          <div className=\"flex items-baseline space-x-2\">\r\n            <span className=\"text-2xl font-mono font-bold text-white\">\r\n              {value.toFixed(1)}\r\n            </span>\r\n            <span className=\"text-sm text-gray-400\">/ {max}</span>\r\n          </div>\r\n          <div className={`text-xs ${getTrendColor()} mt-1`}>\r\n            {trend === 'up' && '+'}\r\n            {trend === 'down' && '-'}\r\n            {percentage.toFixed(1)}%\r\n          </div>\r\n        </div>\r\n\r\n        {/* Progress bar */}\r\n        <div className=\"relative\">\r\n          <div className=\"w-full bg-gray-800 rounded-full h-2 overflow-hidden\">\r\n            <motion.div\r\n              className={`h-full bg-gradient-to-r ${color} rounded-full relative`}\r\n              initial={{ width: 0 }}\r\n              animate={{ width: `${percentage}%` }}\r\n              transition={{ duration: 1, ease: \"easeOut\" }}\r\n            >\r\n              {/* Animated shine effect */}\r\n              <motion.div\r\n                className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent\"\r\n                animate={{\r\n                  x: ['-100%', '100%']\r\n                }}\r\n                transition={{\r\n                  duration: 2,\r\n                  repeat: Infinity,\r\n                  repeatDelay: 3\r\n                }}\r\n              />\r\n            </motion.div>\r\n          </div>\r\n\r\n          {/* Glow effect */}\r\n          <div\r\n            className={`absolute inset-0 bg-gradient-to-r ${color} rounded-full h-2 opacity-30 blur-sm`}\r\n            style={{ width: `${percentage}%` }}\r\n          />\r\n        </div>\r\n\r\n        {/* Tesla-style data readout */}\r\n        <div className=\"mt-4 text-xs font-mono text-gray-500 space-y-1\">\r\n          <div className=\"flex justify-between\">\r\n            <span>CURR:</span>\r\n            <span className=\"text-cyan-400\">{value.toFixed(2)}</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span>PERC:</span>\r\n            <span className=\"text-cyan-400\">{percentage.toFixed(1)}%</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span>STAT:</span>\r\n            <span className={getTrendColor()}>{trend.toUpperCase()}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Pulse effect for active states */}\r\n      {trend === 'up' && (\r\n        <motion.div\r\n          className={`absolute inset-0 bg-gradient-to-r ${color} opacity-10 rounded-xl`}\r\n          animate={{\r\n            opacity: [0.1, 0.2, 0.1]\r\n          }}\r\n          transition={{\r\n            duration: 2,\r\n            repeat: Infinity\r\n          }}\r\n        />\r\n      )}\r\n    </motion.div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Patron/Contacts/Desktop/Ghost%20in%20the%20Shell/aurora-dashboard/src/components/InsightPanel.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { Lightbulb, MessageCircle, Brain, Zap } from 'lucide-react';\r\nimport { useState, useEffect } from 'react';\r\n\r\ninterface InsightPanelProps {\r\n  insights: string[];\r\n  currentTopic: string;\r\n  currentEmotion: string;\r\n}\r\n\r\nexport function InsightPanel({ insights, currentTopic, currentEmotion }: InsightPanelProps) {\r\n  const [activeInsight, setActiveInsight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (insights.length > 1) {\r\n      const interval = setInterval(() => {\r\n        setActiveInsight((prev) => (prev + 1) % insights.length);\r\n      }, 4000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [insights.length]);\r\n\r\n  const getEmotionIcon = (emotion: string) => {\r\n    switch (emotion) {\r\n      case 'excited':\r\n      case 'happy':\r\n        return <Zap className=\"w-4 h-4 text-yellow-400\" />;\r\n      case 'curious':\r\n        return <Brain className=\"w-4 h-4 text-purple-400\" />;\r\n      case 'anxious':\r\n      case 'nervous':\r\n        return <MessageCircle className=\"w-4 h-4 text-orange-400\" />;\r\n      default:\r\n        return <Lightbulb className=\"w-4 h-4 text-cyan-400\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"bg-black/30 backdrop-blur-md border border-gray-700/50 rounded-xl p-6 relative overflow-hidden\"\r\n    >\r\n      {/* Background neural pattern */}\r\n      <div className=\"absolute inset-0 opacity-5\">\r\n        <svg viewBox=\"0 0 400 100\" className=\"w-full h-full\">\r\n          {Array.from({ length: 20 }, (_, i) => (\r\n            <motion.circle\r\n              key={i}\r\n              cx={20 + i * 20}\r\n              cy={50}\r\n              r=\"1\"\r\n              fill=\"cyan\"\r\n              animate={{\r\n                opacity: [0.3, 0.8, 0.3],\r\n                scale: [1, 1.5, 1]\r\n              }}\r\n              transition={{\r\n                duration: 2,\r\n                delay: i * 0.1,\r\n                repeat: Infinity\r\n              }}\r\n            />\r\n          ))}\r\n        </svg>\r\n      </div>\r\n\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6 relative z-10\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"p-2 rounded-lg bg-gradient-to-r from-cyan-500 to-blue-500 bg-opacity-20\">\r\n            <Brain className=\"w-5 h-5 text-cyan-400\" />\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-white\">Neural Insights</h3>\r\n            <p className=\"text-sm text-gray-400\">Real-time behavioral analysis</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Current state indicators */}\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className=\"flex items-center space-x-2 bg-black/40 rounded-lg px-3 py-2\">\r\n            {getEmotionIcon(currentEmotion)}\r\n            <span className=\"text-sm text-gray-300\">{currentEmotion}</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2 bg-black/40 rounded-lg px-3 py-2\">\r\n            <MessageCircle className=\"w-4 h-4 text-blue-400\" />\r\n            <span className=\"text-sm text-gray-300\">{currentTopic}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Insights display */}\r\n      <div className=\"relative z-10\">\r\n        {insights.length === 0 ? (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            className=\"text-center py-8\"\r\n          >\r\n            <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-gradient-to-r from-gray-700 to-gray-600 mb-4\">\r\n              <Lightbulb className=\"w-6 h-6 text-gray-400\" />\r\n            </div>\r\n            <p className=\"text-gray-400\">Gathering insights from conversation...</p>\r\n            <div className=\"flex justify-center mt-4 space-x-1\">\r\n              {[0, 1, 2].map((i) => (\r\n                <motion.div\r\n                  key={i}\r\n                  className=\"w-2 h-2 bg-cyan-400 rounded-full\"\r\n                  animate={{\r\n                    scale: [1, 1.2, 1],\r\n                    opacity: [0.5, 1, 0.5]\r\n                  }}\r\n                  transition={{\r\n                    duration: 1,\r\n                    delay: i * 0.3,\r\n                    repeat: Infinity\r\n                  }}\r\n                />\r\n              ))}\r\n            </div>\r\n          </motion.div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {/* Insight counter */}\r\n            {insights.length > 1 && (\r\n              <div className=\"flex justify-center mb-4\">\r\n                <div className=\"flex space-x-1\">\r\n                  {insights.map((_, index) => (\r\n                    <motion.div\r\n                      key={index}\r\n                      className={`w-2 h-2 rounded-full ${\r\n                        index === activeInsight ? 'bg-cyan-400' : 'bg-gray-600'\r\n                      }`}\r\n                      animate={{\r\n                        scale: index === activeInsight ? 1.2 : 1\r\n                      }}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Active insight */}\r\n            <AnimatePresence mode=\"wait\">\r\n              <motion.div\r\n                key={activeInsight}\r\n                initial={{ opacity: 0, x: 20 }}\r\n                animate={{ opacity: 1, x: 0 }}\r\n                exit={{ opacity: 0, x: -20 }}\r\n                transition={{ duration: 0.3 }}\r\n                className=\"bg-gradient-to-r from-cyan-500/10 to-blue-500/10 rounded-lg p-4 border border-cyan-500/20\"\r\n              >\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <div className=\"flex-shrink-0 mt-1\">\r\n                    <div className=\"w-8 h-8 rounded-full bg-gradient-to-r from-cyan-400 to-blue-500 flex items-center justify-center\">\r\n                      <Lightbulb className=\"w-4 h-4 text-white\" />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex-grow\">\r\n                    <motion.p\r\n                      className=\"text-gray-100 leading-relaxed\"\r\n                      initial={{ opacity: 0 }}\r\n                      animate={{ opacity: 1 }}\r\n                      transition={{ delay: 0.2 }}\r\n                    >\r\n                      {insights[activeInsight]}\r\n                    </motion.p>\r\n                    <div className=\"flex items-center justify-between mt-3 text-xs text-gray-400\">\r\n                      <span>Insight {activeInsight + 1} of {insights.length}</span>\r\n                      <span className=\"font-mono\">\r\n                        {new Date().toLocaleTimeString()}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            </AnimatePresence>\r\n\r\n            {/* All insights preview */}\r\n            {insights.length > 1 && (\r\n              <motion.div\r\n                initial={{ opacity: 0, height: 0 }}\r\n                animate={{ opacity: 1, height: 'auto' }}\r\n                className=\"space-y-2 mt-4\"\r\n              >\r\n                <h4 className=\"text-sm font-medium text-gray-400 mb-2\">Recent Insights</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2\">\r\n                  {insights.slice(-6).map((insight, index) => (\r\n                    <motion.div\r\n                      key={index}\r\n                      className={`p-3 rounded-lg border cursor-pointer transition-all ${\r\n                        index === activeInsight\r\n                          ? 'bg-cyan-500/20 border-cyan-500/40'\r\n                          : 'bg-black/20 border-gray-700/30 hover:border-gray-600/50'\r\n                      }`}\r\n                      whileHover={{ scale: 1.02 }}\r\n                      onClick={() => setActiveInsight(index)}\r\n                    >\r\n                      <p className=\"text-xs text-gray-300 line-clamp-2\">\r\n                        {insight}\r\n                      </p>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Ambient glow */}\r\n      <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 w-32 h-8 bg-gradient-to-t from-cyan-500/20 to-transparent blur-xl\" />\r\n    </motion.div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1298, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Patron/Contacts/Desktop/Ghost%20in%20the%20Shell/aurora-dashboard/src/components/ConnectionStatus.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { Wifi, WifiOff, Loader2, Shield, Database } from 'lucide-react';\r\n\r\ninterface ConnectionStatusProps {\r\n  connected: boolean;\r\n  loading: boolean;\r\n}\r\n\r\nexport function ConnectionStatus({ connected, loading }: ConnectionStatusProps) {\r\n  const getStatusColor = () => {\r\n    if (loading) return 'text-yellow-400';\r\n    return connected ? 'text-green-400' : 'text-red-400';\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    if (loading) return <Loader2 className=\"w-4 h-4 animate-spin\" />;\r\n    return connected ? <Wifi className=\"w-4 h-4\" /> : <WifiOff className=\"w-4 h-4\" />;\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (loading) return 'CONNECTING';\r\n    return connected ? 'NEURAL LINK ACTIVE' : 'CONNECTION LOST';\r\n  };\r\n\r\n  const getBorderColor = () => {\r\n    if (loading) return 'border-yellow-400/30';\r\n    return connected ? 'border-green-400/30' : 'border-red-400/30';\r\n  };\r\n\r\n  const getBgColor = () => {\r\n    if (loading) return 'from-yellow-400/10 to-orange-400/10';\r\n    return connected ? 'from-green-400/10 to-emerald-400/10' : 'from-red-400/10 to-rose-400/10';\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, x: 20 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      className={`flex items-center space-x-4 bg-gradient-to-r ${getBgColor()} backdrop-blur-md border ${getBorderColor()} rounded-xl px-4 py-3`}\r\n    >\r\n      {/* Connection status */}\r\n      <div className=\"flex items-center space-x-2\">\r\n        <motion.div\r\n          animate={{\r\n            scale: connected ? [1, 1.1, 1] : 1,\r\n            rotate: loading ? 360 : 0\r\n          }}\r\n          transition={{\r\n            scale: { duration: 1, repeat: Infinity },\r\n            rotate: { duration: 2, repeat: Infinity, ease: \"linear\" }\r\n          }}\r\n          className={getStatusColor()}\r\n        >\r\n          {getStatusIcon()}\r\n        </motion.div>\r\n        <div>\r\n          <div className={`text-sm font-mono font-bold ${getStatusColor()}`}>\r\n            {getStatusText()}\r\n          </div>\r\n          <div className=\"text-xs text-gray-400\">\r\n            {connected ? 'localhost:8000' : 'Retrying...'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Security indicators */}\r\n      <div className=\"flex items-center space-x-2 border-l border-gray-700/50 pl-4\">\r\n        <motion.div\r\n          animate={{\r\n            opacity: connected ? [0.5, 1, 0.5] : 0.3\r\n          }}\r\n          transition={{ duration: 2, repeat: Infinity }}\r\n          className=\"flex items-center space-x-1\"\r\n        >\r\n          <Shield className=\"w-3 h-3 text-cyan-400\" />\r\n          <span className=\"text-xs font-mono text-cyan-400\">SSL</span>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          animate={{\r\n            opacity: connected ? [0.5, 1, 0.5] : 0.3\r\n          }}\r\n          transition={{ duration: 2, repeat: Infinity, delay: 0.5 }}\r\n          className=\"flex items-center space-x-1\"\r\n        >\r\n          <Database className=\"w-3 h-3 text-blue-400\" />\r\n          <span className=\"text-xs font-mono text-blue-400\">DB</span>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Signal strength indicator */}\r\n      <div className=\"flex items-center space-x-1\">\r\n        {[0, 1, 2, 3].map((i) => (\r\n          <motion.div\r\n            key={i}\r\n            className={`w-1 ${connected ? 'bg-green-400' : 'bg-gray-600'}`}\r\n            style={{ height: `${4 + i * 2}px` }}\r\n            animate={{\r\n              opacity: connected ? [0.3, 1, 0.3] : 0.3,\r\n              scaleY: connected ? [0.5, 1, 0.5] : 0.5\r\n            }}\r\n            transition={{\r\n              duration: 1,\r\n              delay: i * 0.1,\r\n              repeat: Infinity\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {/* Status pulse */}\r\n      <motion.div\r\n        className={`w-3 h-3 rounded-full ${connected ? 'bg-green-400' : loading ? 'bg-yellow-400' : 'bg-red-400'}`}\r\n        animate={{\r\n          scale: connected ? [1, 1.3, 1] : loading ? [1, 1.2, 1] : 1,\r\n          opacity: connected ? [0.7, 1, 0.7] : loading ? [0.5, 1, 0.5] : 0.5\r\n        }}\r\n        transition={{\r\n          duration: connected ? 1 : loading ? 0.8 : 2,\r\n          repeat: Infinity\r\n        }}\r\n      />\r\n    </motion.div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1584, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Patron/Contacts/Desktop/Ghost%20in%20the%20Shell/aurora-dashboard/src/lib/api.ts"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8000';\r\n\r\nexport interface LiveMetrics {\r\n  relationship_level: number;\r\n  trust_level: number;\r\n  emotional_sync: number;\r\n  memory_depth: number;\r\n  current_emotion: string;\r\n  current_topic: string;\r\n  insights_count: number;\r\n  conversation_turns: number;\r\n  recent_insights: string[];\r\n  conversation_active: boolean;\r\n  last_updated: string;\r\n}\r\n\r\nexport interface UserProfile {\r\n  user_id: string;\r\n  created_at: string;\r\n  total_conversations: number;\r\n  avg_relationship_level: number;\r\n  avg_trust_level: number;\r\n  avg_emotional_sync: number;\r\n  dominant_emotions: string[];\r\n  frequent_topics: string[];\r\n  communication_style: string;\r\n  vulnerability_pattern: number;\r\n  personality_traits: Record<string, any>;\r\n  last_active: string;\r\n}\r\n\r\nexport interface Conversation {\r\n  conversation_id: string;\r\n  user_id: string;\r\n  started_at: string;\r\n  ended_at: string;\r\n  total_turns: number;\r\n  final_relationship_level: number;\r\n  final_trust_level: number;\r\n  final_emotional_sync: number;\r\n  final_memory_depth: number;\r\n  dominant_topic: string;\r\n  emotional_journey: string[];\r\n  conversation_summary: string;\r\n  key_revelations: string[];\r\n  vulnerability_score: number;\r\n}\r\n\r\nexport interface Insight {\r\n  insight_id: string;\r\n  user_id: string;\r\n  conversation_id: string;\r\n  speech_id: string;\r\n  insight_text: string;\r\n  insight_type: string;\r\n  confidence_score: number;\r\n  timestamp: string;\r\n  supporting_evidence: string[];\r\n  psychological_category: string;\r\n}\r\n\r\nexport class AuroraAPI {\r\n  private baseUrl: string;\r\n\r\n  constructor(baseUrl = API_BASE_URL) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n\r\n  async getLiveMetrics(): Promise<LiveMetrics> {\r\n    const response = await fetch(`${this.baseUrl}/api/metrics`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch metrics: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async getUserProfile(userId = 'default_user'): Promise<{\r\n    profile: UserProfile;\r\n    conversation_count: number;\r\n    insights_count: number;\r\n    recent_conversations: Conversation[];\r\n    recent_insights: Insight[];\r\n  }> {\r\n    const response = await fetch(`${this.baseUrl}/api/users/${userId}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch user profile: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async getUserInsights(userId = 'default_user', limit = 20): Promise<{\r\n    user_id: string;\r\n    total_insights: number;\r\n    insights_by_category: Record<string, Insight[]>;\r\n    all_insights: Insight[];\r\n  }> {\r\n    const response = await fetch(`${this.baseUrl}/api/users/${userId}/insights?limit=${limit}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch user insights: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async getUserAnalytics(userId = 'default_user'): Promise<{\r\n    user_id: string;\r\n    conversation_analytics: {\r\n      total_conversations: number;\r\n      avg_relationship_level: number;\r\n      avg_trust_level: number;\r\n      avg_emotional_sync: number;\r\n      avg_memory_depth: number;\r\n      avg_vulnerability_score: number;\r\n      relationship_progression: number[];\r\n      trust_progression: number[];\r\n    };\r\n    insight_analytics: {\r\n      total_insights: number;\r\n      insights_by_type: Record<string, number>;\r\n      insights_by_category: Record<string, number>;\r\n      avg_confidence: number;\r\n    };\r\n    behavioral_patterns: {\r\n      dominant_topics: Record<string, number>;\r\n      emotional_patterns: string[][];\r\n      conversation_lengths: number[];\r\n    };\r\n  }> {\r\n    const response = await fetch(`${this.baseUrl}/api/analytics/user/${userId}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch analytics: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async searchInsights(query: string, userId?: string, limit = 10): Promise<{\r\n    query: string;\r\n    user_id?: string;\r\n    results_count: number;\r\n    insights: Insight[];\r\n  }> {\r\n    const body = { query, limit, ...(userId && { user_id: userId }) };\r\n    const response = await fetch(`${this.baseUrl}/api/insights/search`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body)\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to search insights: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async processSpeech(text: string, userId = 'default_user', conversationId?: string): Promise<{\r\n    speech_record: any;\r\n    updated_metrics: LiveMetrics;\r\n    user_profile: UserProfile;\r\n    processing_status: string;\r\n    database_stored: boolean;\r\n  }> {\r\n    const body = {\r\n      text,\r\n      user_id: userId,\r\n      ...(conversationId && { conversation_id: conversationId })\r\n    };\r\n\r\n    const response = await fetch(`${this.baseUrl}/api/process-speech`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(body)\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to process speech: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async createConversation(): Promise<{\r\n    conversation_id: string;\r\n    conversation_url: string;\r\n    persona_id: string;\r\n    webhook_url?: string;\r\n    html_client_needed: boolean;\r\n    instructions: string;\r\n  }> {\r\n    const response = await fetch(`${this.baseUrl}/api/create-conversation`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to create conversation: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async getDatabaseStatus(): Promise<{\r\n    database_connected: boolean;\r\n    tables_initialized: {\r\n      users: boolean;\r\n      conversations: boolean;\r\n      insights: boolean;\r\n    };\r\n    database_path: string;\r\n    record_counts?: {\r\n      users: number;\r\n      conversations: number;\r\n      insights: number;\r\n      total_records: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(`${this.baseUrl}/api/database/status`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch database status: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async getRecentActivity(): Promise<{\r\n    recent_users?: Array<{\r\n      user_id: string;\r\n      last_active: string;\r\n      total_conversations: number;\r\n    }>;\r\n    recent_conversations?: Array<{\r\n      conversation_id: string;\r\n      user_id: string;\r\n      ended_at: string;\r\n      total_turns: number;\r\n    }>;\r\n    recent_insights?: Array<{\r\n      insight_text: string;\r\n      user_id: string;\r\n      timestamp: string;\r\n      insight_type: string;\r\n    }>;\r\n  }> {\r\n    const response = await fetch(`${this.baseUrl}/api/database/recent-activity`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch recent activity: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async resetSystem(): Promise<{\r\n    status: string;\r\n    metrics: LiveMetrics;\r\n  }> {\r\n    const response = await fetch(`${this.baseUrl}/api/reset`, {\r\n      method: 'DELETE'\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to reset system: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  async getAllSpeeches(): Promise<{\r\n    total_speeches: number;\r\n    speeches: any[];\r\n    current_metrics: LiveMetrics;\r\n  }> {\r\n    const response = await fetch(`${this.baseUrl}/api/speeches`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch speeches: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n  }\r\n}\r\n\r\nexport const auroraAPI = new AuroraAPI();"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1712, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Patron/Contacts/Desktop/Ghost%20in%20the%20Shell/aurora-dashboard/src/components/AnalyticsPanel.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { BarChart3, TrendingUp, Activity, Users } from 'lucide-react';\r\nimport { useEffect, useState } from 'react';\r\nimport { auroraAPI } from '@/lib/api';\r\n\r\ninterface AnalyticsPanelProps {\r\n  userId?: string;\r\n}\r\n\r\nexport function AnalyticsPanel({ userId = 'default_user' }: AnalyticsPanelProps) {\r\n  const [analytics, setAnalytics] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchAnalytics = async () => {\r\n      try {\r\n        const data = await auroraAPI.getUserAnalytics(userId);\r\n        setAnalytics(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch analytics:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAnalytics();\r\n    const interval = setInterval(fetchAnalytics, 10000);\r\n    return () => clearInterval(interval);\r\n  }, [userId]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-black/30 backdrop-blur-md border border-gray-700/50 rounded-xl p-6\">\r\n        <div className=\"animate-pulse space-y-4\">\r\n          <div className=\"h-4 bg-gray-700 rounded w-1/4\"></div>\r\n          <div className=\"h-8 bg-gray-700 rounded w-1/2\"></div>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"h-4 bg-gray-700 rounded\"></div>\r\n            <div className=\"h-4 bg-gray-700 rounded w-3/4\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!analytics || !analytics.conversation_analytics) {\r\n    return (\r\n      <div className=\"bg-black/30 backdrop-blur-md border border-gray-700/50 rounded-xl p-6 text-center\">\r\n        <Activity className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\r\n        <p className=\"text-gray-400\">No analytics data available</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const { conversation_analytics, insight_analytics, behavioral_patterns } = analytics;\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"bg-black/30 backdrop-blur-md border border-gray-700/50 rounded-xl p-6 space-y-6\"\r\n    >\r\n      {/* Header */}\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"p-2 rounded-lg bg-gradient-to-r from-green-500 to-emerald-500 bg-opacity-20\">\r\n          <BarChart3 className=\"w-5 h-5 text-green-400\" />\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-lg font-medium text-white\">Analytics Overview</h3>\r\n          <p className=\"text-sm text-gray-400\">Behavioral and conversation patterns</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key metrics grid */}\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n        <div className=\"bg-black/40 rounded-lg p-3 border border-gray-700/30\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <Users className=\"w-4 h-4 text-blue-400\" />\r\n            <span className=\"text-xs text-gray-400\">CONVERSATIONS</span>\r\n          </div>\r\n          <div className=\"text-xl font-mono text-white\">\r\n            {conversation_analytics.total_conversations}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-black/40 rounded-lg p-3 border border-gray-700/30\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <TrendingUp className=\"w-4 h-4 text-green-400\" />\r\n            <span className=\"text-xs text-gray-400\">AVG RELATIONSHIP</span>\r\n          </div>\r\n          <div className=\"text-xl font-mono text-white\">\r\n            {conversation_analytics.avg_relationship_level?.toFixed(1) || '0.0'}%\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-black/40 rounded-lg p-3 border border-gray-700/30\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <Activity className=\"w-4 h-4 text-purple-400\" />\r\n            <span className=\"text-xs text-gray-400\">INSIGHTS</span>\r\n          </div>\r\n          <div className=\"text-xl font-mono text-white\">\r\n            {insight_analytics.total_insights}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-black/40 rounded-lg p-3 border border-gray-700/30\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <BarChart3 className=\"w-4 h-4 text-cyan-400\" />\r\n            <span className=\"text-xs text-gray-400\">CONFIDENCE</span>\r\n          </div>\r\n          <div className=\"text-xl font-mono text-white\">\r\n            {(insight_analytics.avg_confidence * 100)?.toFixed(0) || '0'}%\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Behavioral patterns */}\r\n      <div className=\"space-y-4\">\r\n        <h4 className=\"text-sm font-medium text-gray-300\">Behavioral Patterns</h4>\r\n\r\n        {/* Topics distribution */}\r\n        {behavioral_patterns.dominant_topics && Object.keys(behavioral_patterns.dominant_topics).length > 0 && (\r\n          <div className=\"space-y-2\">\r\n            <span className=\"text-xs text-gray-400\">FREQUENT TOPICS</span>\r\n            <div className=\"space-y-1\">\r\n              {Object.entries(behavioral_patterns.dominant_topics)\r\n                .slice(0, 5)\r\n                .map(([topic, count], index) => {\r\n                  const percentage = (count as number / conversation_analytics.total_conversations) * 100;\r\n                  return (\r\n                    <div key={topic} className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm text-gray-300 capitalize\">{topic}</span>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <div className=\"w-20 bg-gray-800 rounded-full h-1.5 overflow-hidden\">\r\n                          <motion.div\r\n                            className=\"h-full bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full\"\r\n                            initial={{ width: 0 }}\r\n                            animate={{ width: `${percentage}%` }}\r\n                            transition={{ delay: index * 0.1, duration: 0.8 }}\r\n                          />\r\n                        </div>\r\n                        <span className=\"text-xs font-mono text-gray-400\">{count}</span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Insight categories */}\r\n        {insight_analytics.insights_by_category && Object.keys(insight_analytics.insights_by_category).length > 0 && (\r\n          <div className=\"space-y-2\">\r\n            <span className=\"text-xs text-gray-400\">INSIGHT CATEGORIES</span>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              {Object.entries(insight_analytics.insights_by_category)\r\n                .slice(0, 4)\r\n                .map(([category, count]) => (\r\n                  <div key={category} className=\"bg-black/40 rounded-lg p-2 border border-gray-700/30\">\r\n                    <div className=\"text-xs text-gray-400 uppercase\">{category}</div>\r\n                    <div className=\"text-sm font-mono text-cyan-400\">{count}</div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Progress indicators */}\r\n      {conversation_analytics.relationship_progression && conversation_analytics.relationship_progression.length > 1 && (\r\n        <div className=\"space-y-2\">\r\n          <span className=\"text-xs text-gray-400\">RELATIONSHIP PROGRESSION</span>\r\n          <div className=\"flex items-end space-x-1 h-16\">\r\n            {conversation_analytics.relationship_progression.slice(-10).map((value, index) => (\r\n              <motion.div\r\n                key={index}\r\n                className=\"bg-gradient-to-t from-pink-500 to-rose-400 rounded-sm flex-1 min-w-[2px]\"\r\n                initial={{ height: 0 }}\r\n                animate={{ height: `${(value / 100) * 100}%` }}\r\n                transition={{ delay: index * 0.05, duration: 0.5 }}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2272, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Patron/Contacts/Desktop/Ghost%20in%20the%20Shell/aurora-dashboard/src/components/InteractionGuide.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { motion } from 'framer-motion';\r\nimport { Mic, MessageCircle, Brain, Zap } from 'lucide-react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport function InteractionGuide() {\r\n  const [userName, setUserName] = useState('');\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    const savedName = localStorage.getItem('aurora_user_name') || '';\r\n    setUserName(savedName);\r\n  }, []);\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"bg-black/30 backdrop-blur-md border border-gray-700/50 rounded-xl p-6 space-y-4\"\r\n    >\r\n      {/* Header */}\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"p-2 rounded-lg bg-gradient-to-r from-green-500 to-emerald-500 bg-opacity-20\">\r\n          <MessageCircle className=\"w-5 h-5 text-green-400\" />\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-lg font-medium text-white\">Talk to Aurora</h3>\r\n          <p className=\"text-sm text-gray-400\">Neural conversation interface</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Instructions */}\r\n      <div className=\"space-y-4\">\r\n        <div className=\"space-y-3\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-gradient-to-r from-cyan-400 to-blue-500 flex items-center justify-center\">\r\n              <Mic className=\"w-4 h-4 text-white\" />\r\n            </div>\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-200\">Voice Interaction</h4>\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                Simply speak to Aurora in the center orb. Your voice will be captured automatically.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-start space-x-3\">\r\n            <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-gradient-to-r from-purple-400 to-pink-500 flex items-center justify-center\">\r\n              <Brain className=\"w-4 h-4 text-white\" />\r\n            </div>\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-200\">Real-time Analysis</h4>\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                Aurora analyzes your speech patterns, emotions, and topics in real-time.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-start space-x-3\">\r\n            <div className=\"flex-shrink-0 w-8 h-8 rounded-full bg-gradient-to-r from-yellow-400 to-orange-500 flex items-center justify-center\">\r\n              <Zap className=\"w-4 h-4 text-white\" />\r\n            </div>\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-200\">Dynamic Metrics</h4>\r\n              <p className=\"text-xs text-gray-400 mt-1\">\r\n                Watch the orbiting metrics update based on your conversation depth and emotional connection.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Current status */}\r\n        <div className=\"border-t border-gray-700/50 pt-4 space-y-2\">\r\n          <h4 className=\"text-sm font-medium text-gray-300\">Current Status</h4>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-xs text-gray-400\">Voice Recognition</span>\r\n              <div className=\"flex items-center space-x-1\">\r\n                <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\r\n                <span className=\"text-xs text-green-400\">Active</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-xs text-gray-400\">Neural Processing</span>\r\n              <div className=\"flex items-center space-x-1\">\r\n                <div className=\"w-2 h-2 bg-cyan-400 rounded-full animate-pulse\"></div>\r\n                <span className=\"text-xs text-cyan-400\">Ready</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-xs text-gray-400\">Avatar Connection</span>\r\n              <div className=\"flex items-center space-x-1\">\r\n                <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\"></div>\r\n                <span className=\"text-xs text-blue-400\">Connected</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* User customization */}\r\n        <div className=\"bg-gradient-to-r from-purple-500/10 to-pink-500/10 rounded-lg p-3 border border-purple-500/20 space-y-3\">\r\n          <h4 className=\"text-xs font-medium text-purple-400 mb-2\">👤 User Settings</h4>\r\n\r\n          <div>\r\n            <label className=\"text-xs text-gray-400 block mb-1\">Your Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your name...\"\r\n              className=\"w-full bg-black/40 border border-gray-600/30 rounded px-2 py-1 text-xs text-white placeholder-gray-500 focus:border-purple-400 focus:outline-none\"\r\n              value={userName}\r\n              onChange={(e) => {\r\n                setUserName(e.target.value);\r\n                if (mounted) {\r\n                  localStorage.setItem('aurora_user_name', e.target.value);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            onClick={async () => {\r\n              try {\r\n                const response = await fetch('http://localhost:8000/api/create-conversation', {\r\n                  method: 'POST'\r\n                });\r\n                const data = await response.json();\r\n                alert(`New conversation created!\\nURL: ${data.conversation_url}\\nID: ${data.conversation_id}`);\r\n              } catch (error) {\r\n                alert('Failed to create conversation');\r\n              }\r\n            }}\r\n            className=\"w-full bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs py-2 rounded font-medium hover:shadow-lg hover:shadow-purple-500/30 transition-all\"\r\n          >\r\n            Create New Conversation\r\n          </button>\r\n        </div>\r\n\r\n        {/* Quick tips */}\r\n        <div className=\"bg-gradient-to-r from-cyan-500/10 to-blue-500/10 rounded-lg p-3 border border-cyan-500/20\">\r\n          <h4 className=\"text-xs font-medium text-cyan-400 mb-2\">💡 Quick Tips</h4>\r\n          <ul className=\"text-xs text-gray-300 space-y-1\">\r\n            <li>• Speak naturally - Aurora understands conversational language</li>\r\n            <li>• Share your thoughts, feelings, or ask questions</li>\r\n            <li>• Watch the avatar's emotional responses in real-time</li>\r\n            <li>• Check the Analytics tab for deeper insights</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2795, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Patron/Contacts/Desktop/Ghost%20in%20the%20Shell/aurora-dashboard/src/components/ClientOnly.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\ninterface ClientOnlyProps {\r\n  children: React.ReactNode;\r\n  fallback?: React.ReactNode;\r\n}\r\n\r\nexport function ClientOnly({ children, fallback = null }: ClientOnlyProps) {\r\n  const [hasMounted, setHasMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setHasMounted(true);\r\n  }, []);\r\n\r\n  if (!hasMounted) {\r\n    return <>{fallback}</>;\r\n  }\r\n\r\n  return <>{children}</>;\r\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AASO,SAAS,WAAW,EAAE,QAAQ,EAAE,WAAW,IAAI,EAAmB;IACvE,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAE7C,IAAA,kNAAS,EAAC;QACR,cAAc;IAChB,GAAG,EAAE;IAEL,IAAI,CAAC,YAAY;QACf,qBAAO;sBAAG;;IACZ;IAEA,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 2822, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Patron/Contacts/Desktop/Ghost%20in%20the%20Shell/aurora-dashboard/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { AvatarWithMessageHandler } from '@/components/AvatarWithMessageHandler';\nimport { MetricCard } from '@/components/MetricCard';\nimport { InsightPanel } from '@/components/InsightPanel';\nimport { ConnectionStatus } from '@/components/ConnectionStatus';\nimport { AnalyticsPanel } from '@/components/AnalyticsPanel';\nimport { InteractionGuide } from '@/components/InteractionGuide';\nimport { ClientOnly } from '@/components/ClientOnly';\nimport { Brain, Heart, Zap, Database, Settings, Activity } from 'lucide-react';\n\ninterface LiveMetrics {\n  relationship_level: number;\n  trust_level: number;\n  emotional_sync: number;\n  memory_depth: number;\n  current_emotion: string;\n  current_topic: string;\n  insights_count: number;\n  conversation_turns: number;\n  recent_insights: string[];\n  conversation_active: boolean;\n  last_updated: string;\n}\n\nexport default function Dashboard() {\n  const [metrics, setMetrics] = useState<LiveMetrics>({\n    relationship_level: 25.0,\n    trust_level: 35.0,\n    emotional_sync: 45.0,\n    memory_depth: 15.0,\n    current_emotion: \"neutral\",\n    current_topic: \"general\",\n    insights_count: 0,\n    conversation_turns: 0,\n    recent_insights: [],\n    conversation_active: false,\n    last_updated: new Date().toISOString()\n  });\n\n  const [connected, setConnected] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [activeView, setActiveView] = useState<'main' | 'analytics' | 'settings'>('main');\n  const [userId, setUserId] = useState('default_user');\n  const [mounted, setMounted] = useState(false);\n\n  const fetchMetrics = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/metrics');\n      if (response.ok) {\n        const data = await response.json();\n        setMetrics(data);\n        setConnected(true);\n      }\n    } catch (error) {\n      console.error('Failed to fetch metrics:', error);\n      setConnected(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setMounted(true);\n\n    // Get user name from localStorage\n    const userName = localStorage.getItem('aurora_user_name');\n    if (userName) {\n      setUserId(userName.toLowerCase().replace(/\\s+/g, '_'));\n    }\n\n    fetchMetrics();\n    const interval = setInterval(fetchMetrics, 2000); // Update every 2 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  // Don't render until mounted to avoid hydration mismatch\n  if (!mounted) {\n    return (\n      <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 rounded-full bg-gradient-to-r from-cyan-400 to-blue-500 animate-spin\" />\n          <span className=\"text-cyan-400 font-mono\">INITIALIZING AURORA...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white overflow-hidden relative\" suppressHydrationWarning>\n      {/* Animated background grid */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-gray-900 via-black to-gray-900\">\n        <div className=\"absolute inset-0 neural-grid opacity-20\" />\n      </div>\n\n      {/* Tesla-style header */}\n      <motion.div\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"relative z-10 flex justify-between items-center p-6 border-b border-gray-800/50 backdrop-blur-sm\"\n      >\n        <div className=\"flex items-center space-x-4\">\n          <motion.div\n            animate={{ rotate: metrics.conversation_active ? 360 : 0 }}\n            transition={{ duration: 2, repeat: metrics.conversation_active ? Infinity : 0 }}\n            className=\"w-8 h-8 rounded-full bg-gradient-to-r from-cyan-400 to-blue-500 flex items-center justify-center\"\n          >\n            <Brain className=\"w-4 h-4\" />\n          </motion.div>\n          <div>\n            <h1 className=\"text-2xl font-light tracking-wide\">AURORA</h1>\n            <p className=\"text-gray-400 text-sm\">Neural Interface Dashboard</p>\n          </div>\n        </div>\n\n        {/* Navigation */}\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2 bg-black/40 rounded-lg p-1\">\n            {[\n              { key: 'main', icon: Brain, label: 'Main' },\n              { key: 'analytics', icon: Activity, label: 'Analytics' },\n              { key: 'settings', icon: Settings, label: 'Settings' }\n            ].map(({ key, icon: Icon, label }) => (\n              <motion.button\n                key={key}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() => setActiveView(key as any)}\n                className={`flex items-center space-x-2 px-3 py-2 rounded-lg transition-all ${\n                  activeView === key\n                    ? 'bg-cyan-500 text-white shadow-lg shadow-cyan-500/30'\n                    : 'text-gray-400 hover:text-white hover:bg-white/10'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <span className=\"text-sm font-medium\">{label}</span>\n              </motion.button>\n            ))}\n          </div>\n          <ConnectionStatus connected={connected} loading={loading} />\n        </div>\n      </motion.div>\n\n      {/* Main content area */}\n      <div className=\"relative z-10 p-6 h-[calc(100vh-100px)]\">\n        {activeView === 'main' && (\n          <div className=\"flex flex-col h-full\">\n            {/* Top row with metrics and orb */}\n            <div className=\"flex-1 flex items-center justify-center\">\n              <div className=\"grid grid-cols-12 gap-6 w-full max-w-7xl\">\n                {/* Left metrics panel */}\n                <motion.div\n                  initial={{ opacity: 0, x: -50 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.2 }}\n                  className=\"col-span-3 space-y-4\"\n                >\n                  <MetricCard\n                    title=\"Relationship\"\n                    value={metrics.relationship_level}\n                    max={100}\n                    icon={<Heart className=\"w-5 h-5\" />}\n                    color=\"from-pink-500 to-rose-500\"\n                    trend={metrics.conversation_active ? 'up' : 'stable'}\n                  />\n                  <MetricCard\n                    title=\"Trust Level\"\n                    value={metrics.trust_level}\n                    max={100}\n                    icon={<Database className=\"w-5 h-5\" />}\n                    color=\"from-blue-500 to-cyan-500\"\n                    trend={metrics.conversation_turns > 5 ? 'up' : 'stable'}\n                  />\n                </motion.div>\n\n                {/* Central avatar with real Tavus video */}\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: 0.4 }}\n                  className=\"col-span-6 flex items-center justify-center\"\n                >\n                  <ClientOnly fallback={\n                    <div className=\"w-80 h-80 rounded-full bg-black/80 flex items-center justify-center\">\n                      <div className=\"text-cyan-400 font-mono\">LOADING AVATAR...</div>\n                    </div>\n                  }>\n                    <AvatarWithMessageHandler\n                      metrics={metrics}\n                      connected={connected}\n                      userId={userId}\n                      onSpeechProcessed={(result) => {\n                        setMetrics(result.updated_metrics);\n                      }}\n                    />\n                  </ClientOnly>\n                </motion.div>\n\n                {/* Right metrics panel */}\n                <motion.div\n                  initial={{ opacity: 0, x: 50 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.2 }}\n                  className=\"col-span-3 space-y-4\"\n                >\n                  <MetricCard\n                    title=\"Emotional Sync\"\n                    value={metrics.emotional_sync}\n                    max={100}\n                    icon={<Zap className=\"w-5 h-5\" />}\n                    color=\"from-yellow-500 to-orange-500\"\n                    trend={metrics.current_emotion !== 'neutral' ? 'up' : 'stable'}\n                  />\n                  <MetricCard\n                    title=\"Memory Depth\"\n                    value={metrics.memory_depth}\n                    max={100}\n                    icon={<Brain className=\"w-5 h-5\" />}\n                    color=\"from-purple-500 to-violet-500\"\n                    trend={metrics.insights_count > 0 ? 'up' : 'stable'}\n                  />\n                </motion.div>\n              </div>\n            </div>\n\n            {/* Bottom insights panel */}\n            <motion.div\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.6 }}\n              className=\"mt-6\"\n            >\n              <InsightPanel insights={metrics.recent_insights} currentTopic={metrics.current_topic} currentEmotion={metrics.current_emotion} />\n            </motion.div>\n\n            {/* Interaction guide moved to bottom */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.8 }}\n              className=\"mt-4\"\n            >\n              <InteractionGuide />\n            </motion.div>\n          </div>\n        )}\n\n        {activeView === 'analytics' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"h-full\"\n          >\n            <AnalyticsPanel userId={userId} />\n          </motion.div>\n        )}\n\n        {activeView === 'settings' && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"h-full bg-black/30 backdrop-blur-md border border-gray-700/50 rounded-xl p-6\"\n          >\n            <div className=\"space-y-6\">\n              <div>\n                <h2 className=\"text-xl font-medium text-white mb-2\">System Settings</h2>\n                <p className=\"text-gray-400\">Configure Aurora neural interface</p>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg text-gray-300\">Connection</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-gray-400\">Backend URL</span>\n                      <span className=\"text-cyan-400 font-mono text-sm\">localhost:8000</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-gray-400\">Update Interval</span>\n                      <span className=\"text-cyan-400 font-mono text-sm\">2000ms</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-gray-400\">Status</span>\n                      <span className={`text-sm font-medium ${connected ? 'text-green-400' : 'text-red-400'}`}>\n                        {connected ? 'Connected' : 'Disconnected'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg text-gray-300\">Metrics</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-gray-400\">Conversations</span>\n                      <span className=\"text-cyan-400 font-mono text-sm\">{metrics.conversation_turns}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-gray-400\">Insights</span>\n                      <span className=\"text-cyan-400 font-mono text-sm\">{metrics.insights_count}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-gray-400\">Last Updated</span>\n                      <span className=\"text-cyan-400 font-mono text-sm\">\n                        {new Date(metrics.last_updated).toLocaleTimeString()}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border-t border-gray-700/50 pt-6\">\n                <h3 className=\"text-lg text-gray-300 mb-4\">Quick Actions</h3>\n                <div className=\"flex space-x-4\">\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => window.location.reload()}\n                    className=\"px-4 py-2 bg-cyan-500 text-white rounded-lg font-medium shadow-lg shadow-cyan-500/30\"\n                  >\n                    Refresh Dashboard\n                  </motion.button>\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => {\n                      fetch('http://localhost:8000/api/reset', { method: 'DELETE' })\n                        .then(() => window.location.reload());\n                    }}\n                    className=\"px-4 py-2 bg-red-500 text-white rounded-lg font-medium shadow-lg shadow-red-500/30\"\n                  >\n                    Reset System\n                  </motion.button>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </div>\n\n      {/* Ambient light effects */}\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-gradient-to-r from-cyan-500/10 via-blue-500/10 to-purple-500/10 rounded-full blur-3xl animate-pulse\" />\n\n      {/* Status indicators */}\n      <div className=\"absolute bottom-6 right-6 flex space-x-2\">\n        <div className={`w-3 h-3 rounded-full ${metrics.conversation_active ? 'bg-green-400 animate-pulse' : 'bg-gray-600'}`} />\n        <div className={`w-3 h-3 rounded-full ${connected ? 'bg-blue-400 animate-pulse' : 'bg-red-400'}`} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}